
version: 2
jobs:
    # The build job
    build:
        working_directory: ~/project
        docker:
            - image: circleci/node:8.11.3-browsers
        steps:
            # Checkout the code from the branch into the working_directory
            - checkout
            # Log the current branch
            - run:
                name: Show current branch
                command: echo ${CIRCLE_BRANCH}
            # Restore local dependencies from cache
            - restore_cache:
                keys:
                - v1-dependencies-{{ checksum "package.json" }}
                - v1-dependencies-
            # Install project dependencies
            - run:
                name: Install local dependencies
                command: npm install && sudo npm install @angular/cli -g
            # Cache local dependencies if they don't exist
            - save_cache:
                key: v1-dependencies-{{ checksum "package.json" }}
                paths:
                    - node_modules
            # Lint the source code
            - run:
                name: Linting
                command: ng lint
            # Test the source code
            - run:
                name: Testing
                command: echo "no tests!"
            # Build project with different configuration based on
            # the current branch
            - run:
                name: Building
                command: |
                    if [ "${CIRCLE_BRANCH}" == "staging" ]; then
                        npm rebuild node-sass && ng build --prod
                    elif [ "${CIRCLE_BRANCH}" == "master" ]; then
                        npm rebuild node-sass && ng build --prod
                    else
                        npm rebuild node-sass && ng build
                    fi
            # Cache the dist folder for the deploy job
            - save_cache:
                key: v1-dist-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
                paths:
                    - dist
            - run:
                name: Deploying
                command: |
                    if [ "${CIRCLE_BRANCH}" = "master" ]; then
                        ls
                        sudo apt-get install sshpass rsync && sshpass -e rsync -e "ssh -o StrictHostKeyChecking=no" -arvc ./dist root@tetrium.fi:/var/www/test
                    else
                        echo "Not master branch, dry run only"
                    fi
